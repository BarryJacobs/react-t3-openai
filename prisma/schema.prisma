// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id        String   @id @default(cuid())
  name      String   @db.VarChar(50)
  tools     Tool[]
}

model Tool {
  id          String    @id @default(cuid())
  category    Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  String
  title       String    @db.VarChar(50)
  description String    @db.VarChar(255)
  heading     String    @db.VarChar(50)
  summary     String    @db.VarChar(255)
  fields      Field[]
  output      Output?
  config      Configuration?
}

model Configuration {
  id                String  @id @default(cuid())
  tool              Tool    @relation(fields: [toolId], references: [id], onDelete: Cascade)
  toolId            String  @unique
  model             String  @db.VarChar(50)
  prompt            String
  resultPrefix      String
  maxTokens         Int
  temperature       Float
  topP              Float
  frequencyPenalty  Float
  presencePenalty   Float
  stopSequences     String[]
}

model Output {
  id          String  @id @default(cuid())
  tool        Tool    @relation(fields: [toolId], references: [id], onDelete: Cascade)
  toolId      String  @unique
  type        String  @db.VarChar(20)
  title       String  @db.VarChar(50)
  description String  @db.VarChar(255)
}

model Field {
  id          String  @id @default(cuid())
  tool        Tool    @relation(fields: [toolId], references: [id], onDelete: Cascade)
  toolId      String
  order       Int
  type        String  @db.VarChar(20)
  name        String  @db.VarChar(50)
  label       String  @db.VarChar(50)
  placeholder String  @db.VarChar(100)
  hint        String  @db.VarChar(100)
  required    Boolean
}